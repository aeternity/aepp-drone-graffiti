contract DroneGraffitiAuction =
 record state = {is_admin : DroneGraffitiAuction.is_admin,auction_metadata : DroneGraffitiAuction.auction_metadata,latest_auction_slot_id : int,latest_bid_seq_id : int,auction_slots : DroneGraffitiAuction.auction_slots_map}
 type is_admin = map(address, bool)
 type auction_slots_map = map(int, DroneGraffitiAuction.auction_slot)
 record auction_metadata = {geolocation : string,canvas_width : int,canvas_height : int}
 record auction_slot = {id : int,time_capacity : int,minimum_time_per_bid : int,maximum_time_per_bid : int,successful_bids : list(DroneGraffitiAuction.bid),failed_bids : list(DroneGraffitiAuction.bid),start_block_height : int,end_block_height : int}
 record bid = {seq_id : int,user : address,amount : int,time : int,amount_per_time : int,data : DroneGraffitiAuction.artwork_data}
 record artwork_data = {artwork_reference : string,coordinates : DroneGraffitiAuction.coordinates}
 record coordinates = {x : int,y : int}
 entrypoint init : (string, int, int) => DroneGraffitiAuction.state
 entrypoint get_auction_metadata : () => DroneGraffitiAuction.auction_metadata
 entrypoint add_auction_slot : (int, int, int, int, int) => int
 entrypoint all_auction_slots : () => list(DroneGraffitiAuction.auction_slot)
 entrypoint get_auction_slot : (int) => DroneGraffitiAuction.auction_slot
 entrypoint place_bid : (int, int, string, int, int) => DroneGraffitiAuction.auction_slot
 entrypoint admin_withdraw_to_address : (address) => int
 entrypoint admin_withdraw_to_admin : () => int

